<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Unity笔记1--熟悉Unity界面以及构建场景</title>
      <link href="2021/06/01/UnityNotes/Unity%E7%AC%94%E8%AE%B01-%E7%86%9F%E6%82%89Unity%E7%95%8C%E9%9D%A2%E4%BB%A5%E5%8F%8A%E6%9E%84%E5%BB%BA%E5%9C%BA%E6%99%AF/"/>
      <url>2021/06/01/UnityNotes/Unity%E7%AC%94%E8%AE%B01-%E7%86%9F%E6%82%89Unity%E7%95%8C%E9%9D%A2%E4%BB%A5%E5%8F%8A%E6%9E%84%E5%BB%BA%E5%9C%BA%E6%99%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="熟悉Unity界面"><a href="#熟悉Unity界面" class="headerlink" title="熟悉Unity界面"></a>熟悉Unity界面</h1><p>​    首先在开始之前说一下我所使用的Unity版本，我目前所安装的Unity是2020.3版本，具体版本号如下图所示：</p><p><img src="https://p6-tt.byteimg.com/origin/pgc-image/39050d7c97954612bc110e85d4b0d84e.jpg" alt="1.jpg"></p><p>​    同时这个版本也是稳定版本（LTS）</p><p>​    安装完Unity，我们就要开始创建项目，这里我们直接创建一个普通3D项目，项目名为：3DRPG ，进去之后我们按自己喜好调整一下界面布局，具体每个界面的作用这里作简单的介绍，随着我们不断推进项目我们也可以比较快地熟悉各个窗口的作用。</p><p><img src="https://p5-tt.byteimg.com/origin/pgc-image/aa00a709e4fe479aa99a5b3040a5a298.jpg" alt="2.jpg"></p><p>​    👆我们来看一下上面的图，这个界面是我在进行了几个章节之后截的图，一般我们都有几个主要的窗口界面：</p><ul><li><p><strong>Scene</strong>  这个是我们Unity的可视化场景管理窗口，简单来说就是我们可以直接将我们的人物、小物件等东西在Scene窗口上进行操作，这可以极大的方便我们进行场景的布置工作。</p></li><li><p><strong>Hierarchy</strong> 也就是上图靠中间上边的视图，在这个视图中我们可以看到在Scene视图中摆放了哪些物件对象，包括你的小人，花草树木甚至你的Camera(摄像机🎥)和光照对象都会在Hierarchy视图上显示出来。</p></li><li><p><strong>Project</strong> 这个视图里我们可以管理当前项目的文档文件，比如C#代码文件或其它配置文件等都可以在这里直接访问。</p></li><li><p><strong>Inspector</strong> 在这个视图里我们可以查看并修改当前选中对象的属性值，例如我可以在Scene视图或Hierarchy视图选中我的小人，然后修改它的高度、位置等等许多属性。</p></li><li><p><strong>Console</strong> 还有一个视图就是我们的输出控制台啦，在这个控制台里我们可以查看代码错误或者代码输出等信息，在往后我们的C#代码文件中可以利用Debug来输出特定的信息👉👉👉<code>Debug.LogFormat(&quot;调试信息&#123;0&#125;&quot;,xxxx);</code></p><h1 id="安装URP渲染管线"><a href="#安装URP渲染管线" class="headerlink" title="安装URP渲染管线"></a>安装URP渲染管线</h1><p>​    熟悉完界面后，我们就可以开始安装<strong>URP(Universal Render Pipeline)渲染管线</strong>了，首先我们在上边的菜单栏找到Window–Package Manager </p><img src="https://p6-tt.byteimg.com/origin/pgc-image/63fdcf0caf734225823ae387e05ea777.jpg" alt="3.jpg" style="zoom: 67%;" /><p>​    在 Package Manager 中我们可以管理当前项目使用的Unity插件，以后也会经常用到，之后在Package Manager 窗口中左上角我们选择 Pcakages 为<strong>Unity Registry</strong>，随后在右上角搜索<em>Universal RP</em>找到我们要的URP渲染管线并点击安装</p><img src="https://p9-tt.byteimg.com/origin/pgc-image/0c5d7ad152214e88b346851f86c86726.jpg" alt="4.jpg" style="zoom:67%;" /><p>​    我这里安装的URP版本号为 10.4.0 ，该版本已经在Unity 2020.3 中得到了认证。</p><p>​    安装完后我们就要开始配置工作了，首先我们在Project视图点那个+号，然后找到 Rendering -&gt; Universal Render Pipeline -&gt; Pipeline Asset (Forward Renderer) ，如下图👇</p><img src="https://p9-tt.byteimg.com/origin/pgc-image/d659c489af584a5ca3c337957af35a19.jpg" alt="5.jpg" style="zoom:67%;" /><p>​    点击之后我们看到Unity为我们创建了两个文件（下图的第二第三个），当然为了以后更好的管理各种杂七杂八的文件，我们要养成分类的好习惯，所以我们弄个文件夹把它们放在一起，这里我文件夹起名 Pipeline Setting</p><img src="https://p3-tt.byteimg.com/origin/pgc-image/fd12dcde3ace40bf9a60e5db6307675a.jpg" alt="6.jpg" style="zoom: 67%;" /><p>​    下一步我们打开菜单栏中的 Edit—ProjectSettings…</p><img src="https://p5-tt.byteimg.com/origin/pgc-image/35de350f60d04bf7a21461765e3c9f11.jpg" alt="7.jpg" style="zoom: 60%;" /><p>​    在新打开的窗口中我们可以对我们当前的项目进行一些设置操作，这里我们要设置默认的渲染管线为刚刚创建的URP渲染管线，我们分别在左侧栏中选择 Graphics 和 Quality ，再按照下图标蓝色框位置选择我们的URP渲染管线</p><img src="https://p6-tt.byteimg.com/origin/pgc-image/5dac041ae0e14100a36c7ed5e7fa1991.jpg" alt="8.jpg" style="zoom:70%;" /><center>Graphics界面设置URP</center><img src="https://p6-tt.byteimg.com/origin/pgc-image/78eb8e07811a40a08c3f1e084e204cbc.jpg" alt="9.jpg" style="zoom:70%;" /></li></ul><center>Quality界面设置URP</center><p>​    至此，我们的URP渲染管线安装配置就暂时到这了，接下来我们便可以开始导入素材测试渲染效果了。</p><h1 id="导入素材并构建场景"><a href="#导入素材并构建场景" class="headerlink" title="导入素材并构建场景"></a>导入素材并构建场景</h1><h2 id="使用Unity素材商店导入素材"><a href="#使用Unity素材商店导入素材" class="headerlink" title="使用Unity素材商店导入素材"></a>使用Unity素材商店导入素材</h2><p>​    我们可以通过Unity自带的官方商店里面寻找我们喜欢的素材，我们可以点击这个<a href="https://assetstore.unity.com/">链接</a>进入素材商店，也可以在Unity内的 Window—Asset Store 内打开</p><img src="https://p5-tt.byteimg.com/origin/pgc-image/150853385a5e42e282a36d8e1e651371.jpg" alt="10.jpg" style="zoom:60%;" /><p>​    值得注意的是，从Unity2020版开始取消了内置商店的窗口，如果你是2020版或之后的版本的话，打开Asset Store会得到一个无法访问的界面，我们需要再点击 Search Online 按钮按钮来打开网页版商店</p><img src="https://p6-tt.byteimg.com/origin/pgc-image/da99be76548c4ff18c4954eb06ad1d62.jpg" alt="11.jpg" style="zoom:65%;" /><p>​    </p><p>​    我们目前可以先找两个免费素材，如下图所示，一个是场景素材，一个是人物素材，可以供我们前期暂时学习使用了，这里我们点击蓝色的按钮并根据操作添加到你的Unity账户里，就可以在Unity里面下载下来了</p><p><img src="https://p5-tt.byteimg.com/origin/pgc-image/63fc0f40f92a4af181788740c7f975bc.jpg" alt="12.jpg"></p><p>​    在挑选素材时要注意一点就是要看好素材是否支持我们所选择的渲染管线，一般在素材商店界面都会有说明</p><p>​    素材添加到账户之后，我们打开 Package Manager，并在左上角的 Packages 选择为 My Assets，就可以看到在Unity商店添加的素材了，选中素材点击下载并Import就可以添加到项目中啦</p><img src="https://p3-tt.byteimg.com/origin/pgc-image/20d6062a1db34a62a9182d0aa5943889.jpg" alt="13.jpg" style="zoom:70%;" /><p>​    将我们小人拖到Scene视图中，可能会出现小人一身粉色还没渲染外观出来，这时我们就要将素材升级到我们的渲染管线，具体操作是 Edit -&gt; Render Pipeline -&gt; Universal Render Pipeline -&gt; 此时我们可以看到有出来两个选项，第☝个选项是将我们项目里的所以素材都升级为URP；第✌个选项是将当前选中的材质升级为URP，这里我们可以选择第一个。点击升级URP后小人就可以正常显示了</p><img src="https://p5-tt.byteimg.com/origin/pgc-image/29036628920f45c09b47e29ad9a2eaf0.jpg" alt="14.jpg" style="zoom:80%;" /><p>​    </p><h2 id="构建场景"><a href="#构建场景" class="headerlink" title="构建场景"></a>构建场景</h2><p>​    搭建场景部分我们可以先从调整天空样式开始，因为默认的天空样式灰溜溜的并不好看😐，那么我们就开始吧！</p><h3 id="天空"><a href="#天空" class="headerlink" title="天空"></a>天空</h3><p>​    首先调整天空可以先去下个天空盒子（Skybox）素材，这里我下载的是下图所示的Skybox：<a href="https://assetstore.unity.com/packages/vfx/shaders/free-skybox-extended-shader-107400">FREE Skybox Extended Shader</a></p><p><img src="https://p9-tt.byteimg.com/origin/pgc-image/e72308b7966b47368c2cc814dcf5dca4.jpg" alt="15.jpg"></p><p>​    添加好资源后回到Unity内下载并 Import（注意将文件夹分好类），我们可以在素材目录下看到有Demo样例</p><img src="https://p3-tt.byteimg.com/origin/pgc-image/0b812466543d478b9211e068a949438f.jpg" alt="16.jpg" style="zoom:80%;" /><p>​    那么如何来使用这个Skybox呢？</p><p>​    首先我们要在菜单栏打开 Window -&gt; Rendering -&gt; Lighting 窗口</p><img src="https://p6-tt.byteimg.com/origin/pgc-image/448dfc0867b14cea8a884b1da2cd1cc8.jpg" alt="17.jpg" style="zoom:70%;" /><p>​    然后我们在新打开的 Lighting 窗口点击 Environment 选项卡，在Skybox Material 那一栏中就可以选择自己喜欢的Skybox素材了</p><img src="https://p6-tt.byteimg.com/origin/pgc-image/e489644b78364fab8c4b97e49a5f69d3.jpg" alt="18.jpg" style="zoom:80%;" /><p>​    另外，我们在Scene选项卡中可以先点击一下New Lighting Settings按钮来新建一个光照配置文件并将它分类摆好，这个配置文件我们后面可以用来配置场景环境光</p><img src="https://p3-tt.byteimg.com/origin/pgc-image/07234fec87af42b8a7db9fbd227478b5.jpg" alt="19.jpg" style="zoom:80%;" /><p><img src="https://p9-tt.byteimg.com/origin/pgc-image/042dbd7860774728a5a7a00969f383e9.jpg" alt="20.jpg"></p><center>将这个配置文件分类摆在Pipeline Setting文件夹下</center><p>​    </p><p>​    现在我们就把刚刚下载下来的Skybox适用到场景中了，如果想要调整参数的话，我们可以到素材目录下找到刚刚选择的Skybox素材对象，并在 Inspector 视图窗口中调整这些参数</p><img src="https://p26-tt.byteimg.com/origin/pgc-image/e3033b1ee0d947b4b315b4a1c17afbf2.jpg" alt="21.jpg" style="zoom:80%;" /><center>我们可以看到右边的Inspector视图内可以修改Skybox的属性</center><p>​    </p><p>​    至此，天空场景就这样搭建好了，接下来我们来搭建地面的元素吧！</p><h3 id="地面"><a href="#地面" class="headerlink" title="地面"></a>地面</h3><p>​    如果想在Unity中自己来绘制场景地面的话，我们可以利用两个插件 — <strong>Poly Brush</strong> 和 <strong>ProBuilder</strong> 来自己建模。</p><h4 id="Poly-Brush"><a href="#Poly-Brush" class="headerlink" title="Poly Brush"></a>Poly Brush</h4><p>​    我们还是打开 Package Manager，左上角的 Packages 选择为 <strong>Unity Registry</strong> 然后我们在搜索框查找 <strong>Poly Brush</strong> 然后下载下来安装。安装好 Poly Brush 不要着急关闭 Package Manager 窗口，我们还要点开 Samples 导入属于我们URP的 Shader Examples ，即下图中的<strong>第二个选项</strong></p><img src="https://p6-tt.byteimg.com/origin/pgc-image/0a1867154c2045d2ada819d40e319961.jpg" alt="22.jpg" style="zoom:80%;" /><pre><code>&lt;center&gt;如果我们使用URP的话选择的是第二个选项&lt;/center&gt;</code></pre><p>​    当然如果你是使用普通的Unity项目而没有使用URP渲染管线的话就选择<strong>第一个选项</strong></p><p>​    安装好后我们的 Project 视图里就会多出了一个 Polybrush 插件的文件夹，由于之后我们还要安装一些插件，所以我们可以新建一个文件夹命名为 <strong>Addons</strong> 来专门存放这些插件的文件（要养成分类的好习惯）</p><p>​    弄好这些东西后，我们回到Unity主界面，我们通过上方菜单栏的 <strong>Tools-&gt;Polybrush-&gt;Polybrush Window</strong> 来打开Polybrush窗口</p><img src="https://p26-tt.byteimg.com/origin/pgc-image/c58b3d98cab54de79fac9e3d9a0eaac6.jpg" alt="23.jpg" style="zoom:80%;" /><center>打开 Polybrush 窗口</center><p>​    打开 Polybrush 窗口后我们了解一下这些按钮的功能</p><img src="https://p6-tt.byteimg.com/origin/pgc-image/d8e4a421ebcb42719f15c86813a7e131.jpg" alt="24.jpg" style="zoom:80%;" /><ul><li><p>第一个按钮是调整地面的高度，选中该按钮然后在地面上拖拽鼠标即可将地面升高，按住 Ctrl 并拖拽鼠标便是下降。我们看到下面面板中还有一些参数供我们调整：</p><p><strong>OuterRadius</strong> 可以选择外角大小</p><p><strong>InnerRadius</strong> 则修改内角大小。按住 shift 键滑动鼠标滚轮可以调整内圈大小，按住 Ctrl 键滑动滚轮调整外圈。</p><p><strong>Strength</strong>可以修改强度</p><p><strong>Direction</strong> 可以选择地形改变的方向，默认为normal，下拉可以进行修改。</p><p><strong>BrushMirroring</strong>可以复制笔刷，沿着选中的的x,y,z镜像同时修改地形</p></li><li><p>第二个按钮是柔化按钮，羽化功能可以将地图较为僵硬的顶点进行柔化</p></li><li><p>第三个按钮是颜色刷，可以使我们很方便地将我们的地板涂上我们想要的颜色</p></li><li><p>第四个按钮是将预设的物体涂到地板上，我们可以在面板中勾选要刷的物体以及密度（即概率）</p></li><li><p>第五个是贴图刷，和预制体刷子的功能一样，它是将一些texture刷到场景中，可以把图片素材可以引用在场景中选中的物体上。</p></li></ul><h4 id="ProBuilder"><a href="#ProBuilder" class="headerlink" title="ProBuilder"></a>ProBuilder</h4><p>​    上面的Poly Brush插件是用来绘制修改地面的，那么我们如何来创建自己的地面呢？这下就要用到我们的另一个插件 — <strong>ProBuilder</strong> 了</p><p>​    同样地，我们通过 Package Manager 来安装此插件，下载下来后同样把插件文件夹分好类，然后打开窗口</p><img src="https://p5-tt.byteimg.com/origin/pgc-image/9e16aa320d6e461a9fc6a22752440486.jpg" alt="25.jpg" style="zoom:80%;" /><center>ProBuilder界面</center><p>​    我们可以按住 <strong>左Shift</strong> 并鼠标指到图形按钮来查看这些按钮的功能，我们看到有些按钮右上角有个小齿轮，这代表着我们可以进一步来设置，只用按住 Alt 并点击他们就可以进一步地来设置，拿第一个按钮（功能是<strong>创建几何体</strong>）来说</p><img src="https://p6-tt.byteimg.com/origin/pgc-image/bacf417b80d14ac18301bb95e8fb9034.jpg" alt="26.jpg" style="zoom:80%;" /><p>​    按住 Alt 并点击第一个按钮我们打开如上图所示的窗口，这里我们可以选择要创建的物体是什么，这里我选择的是 Plane （平面），下面可以设置该几何体的的轴的朝向、宽度、长度以及顶点数（如上图顶点数是30x30）</p><p>​    具体的功能我们可以自己去尝试，配合 Polybrush 我们就可以轻松地来创建我们的场景并绘制他们啦！</p><p>​    要注意的是我们如果要使用 <em>Low Poly</em> 风格的场景的话，我们要设置地图网格呈三角形，这里可以通过上面 ProBuilder 图中的 <strong>第二排第五个</strong> 按钮来实现，选中我们的地面几何体，然后点击该按钮便可以设置成功。</p><p>​    </p><p>​    到这里，我们就可以自己去尝试一下构建属于自己的场景了。</p>]]></content>
      
      
      <categories>
          
          <category> Unity学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Unity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于我</title>
      <link href="2021/05/31/%E8%AE%B0%E4%BA%8B/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
      <url>2021/05/31/%E8%AE%B0%E4%BA%8B/%E5%85%B3%E4%BA%8E%E6%88%91/</url>
      
        <content type="html"><![CDATA[<h1 id="关于这个博客的一些事🍥"><a href="#关于这个博客的一些事🍥" class="headerlink" title="关于这个博客的一些事🍥"></a>关于这个博客的一些事🍥</h1><p>​    当初创建这个博客的目的是想着记录自己在大学生活中遇到的一些问题或者学习笔记等，平时也看了不少别人的个人博客，于是心血来潮就想自己也创一个属于自己的个人博客。</p><p>​    刚开始我便去查找有什么博客平台，因为我喜欢自己自定义界面的方式，便找到了可以利用GitHub来做一个博客方式，即：<a href="https://hexo.io/zh-cn/">hexo</a> 。之后我便跟着教程开始搭建，也发现了一些很好看的主题，我现在用的这个主题是<a href="https://butterfly.js.org/">butterfly</a>（<a href="https://github.com/jerryc127/hexo-theme-butterfly/tree/dev">GitHub地址</a>）。之后研究美化界面又花了好一些时间，不过在弄这些东西的时候我都觉得很满足，看着属于自己的博客慢慢开始搭建起来，一股成就感就上来了，而且在其中也接触到了许多之前没有遇到过的知识。</p><p>​    弄好博客的基本框架后，才是真正的开始，希望有一个博客之后，能够对我自己有更好的帮助，可以更好地去总结知识点，也希望可以分享一些知识给观看博客的你😀。</p><h1 id="关于我的一些事"><a href="#关于我的一些事" class="headerlink" title="关于我的一些事"></a>关于我的一些事</h1><p>​    待更新…….💨</p>]]></content>
      
      
      <categories>
          
          <category> 记事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记事 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
